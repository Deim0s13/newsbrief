name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: 🔄 Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pip-tools
        run: pip install pip-tools

      - name: Update requirements
        run: |
          # Generate updated requirements.txt with latest versions
          pip-compile --upgrade --output-file requirements-updated.txt requirements.txt
          
          # Check if there are any changes
          if ! diff -q requirements.txt requirements-updated.txt; then
            echo "UPDATES_AVAILABLE=true" >> $GITHUB_ENV
            mv requirements-updated.txt requirements.txt
          else
            echo "UPDATES_AVAILABLE=false" >> $GITHUB_ENV
            echo "No dependency updates available"
          fi

      - name: Test updated dependencies
        if: env.UPDATES_AVAILABLE == 'true'
        run: |
          pip install -r requirements.txt
          # Run basic import tests
          python -c "
          import fastapi
          import uvicorn
          import httpx
          import feedparser
          import readability
          import sqlalchemy
          import pydantic
          import ollama
          import tiktoken
          print('✅ All imports successful')
          "

      - name: Create Pull Request
        if: env.UPDATES_AVAILABLE == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update Python dependencies"
          title: "🔄 Automated dependency updates"
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated updates to Python dependencies.
            
            ### Changes Made
            - Updated `requirements.txt` with latest compatible versions
            - All imports tested successfully
            
            ### Testing
            - ✅ Import tests passed
            - ✅ No breaking changes detected
            
            Please review and merge if CI passes.
            
            ---
            _This PR was created automatically by the dependency update workflow._
          branch: feature/dependency-updates-${{ github.run_number }}
          base: dev
          labels: |
            dependencies
            automated

  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install safety
        run: pip install safety

      - name: Run security audit
        run: |
          echo "🔍 Running security audit on dependencies..."
          safety check -r requirements.txt --json > safety-report.json || true
          
          if [ -s safety-report.json ] && [ "$(cat safety-report.json)" != "[]" ]; then
            echo "⚠️  Security vulnerabilities found!"
            cat safety-report.json | python -m json.tool
            exit 1
          else
            echo "✅ No security vulnerabilities found"
          fi

  update-base-image:
    name: 📦 Check Base Image Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for Python base image updates
        run: |
          current_version=$(grep "FROM python:" Dockerfile | sed 's/FROM python://' | sed 's/-slim//')
          echo "Current Python version: $current_version"
          
          # Get latest Python 3.11 version
          latest_version=$(curl -s https://api.github.com/repos/python/cpython/releases | \
                          jq -r '[.[] | select(.tag_name | startswith("v3.11")) | .tag_name][0]' | \
                          sed 's/v//')
          echo "Latest Python 3.11 version: $latest_version"
          
          if [ "$current_version" != "$latest_version" ]; then
            echo "BASE_IMAGE_UPDATE=true" >> $GITHUB_ENV
            echo "NEW_VERSION=$latest_version" >> $GITHUB_ENV
          fi

      - name: Update Dockerfile
        if: env.BASE_IMAGE_UPDATE == 'true'
        run: |
          sed -i "s/FROM python:.*/FROM python:${{ env.NEW_VERSION }}-slim/" Dockerfile
          echo "Updated Dockerfile to Python ${{ env.NEW_VERSION }}"

      - name: Create Pull Request for base image update
        if: env.BASE_IMAGE_UPDATE == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update Python base image to ${{ env.NEW_VERSION }}"
          title: "📦 Update Python base image to ${{ env.NEW_VERSION }}"
          body: |
            ## Base Image Update
            
            Updates Python base image in Dockerfile to the latest 3.11.x version.
            
            ### Changes
            - Updated `FROM python:${{ env.NEW_VERSION }}-slim`
            
            ### Benefits
            - Latest security patches
            - Performance improvements
            - Bug fixes
            
            ---
            _This PR was created automatically by the dependency update workflow._
          branch: feature/base-image-update-${{ github.run_number }}
          base: dev
          labels: |
            docker
            automated
